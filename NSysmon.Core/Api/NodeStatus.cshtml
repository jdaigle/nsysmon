@model NSysmon.Core.Api.NodeStatusViewModel
@using System.Web
@using NSysmon.Core
@{
    dynamic node = Model;
}
<html>
<head>
    <title>Node Status</title>
</head>
<body>
    <p>
        <span><a href="~/api/nodes">Nodes</a></span> /
        <span><a href="~/Api/node/@(HttpUtility.UrlEncode((string)node.NodeType))/@(HttpUtility.UrlEncode((string)node.UniqueKey))/status">@node.NodeType - @node.UniqueKey</a></span>
    </p>
    <h1>@node.NodeType - @node.UniqueKey</h1>
    <h5><a href="~/Api/node/@(HttpUtility.UrlEncode((string)node.NodeType))/@(HttpUtility.UrlEncode((string)node.UniqueKey))/status?type=json">As JSON</a></h5>
    <ul>
        <li>Node Type: <strong>@node.NodeType</strong></li>
        <li>Unique Key: <strong>@node.UniqueKey</strong></li>
        <li>Monitor Status: <strong>@node.MonitorStatus.ToString() - @node.MonitorStatusReason</strong></li>
        <li>Last Poll (duration): <strong>@(((DateTime?)node.LastPoll).ToRelativeTime()) (@node.LastPollDuration.TotalMilliseconds ms)</strong></li>
    </ul>
    <table>
        <thead>
            <tr>
                <th>Type</th>
                <th>Name</th>
                <th>Polls</th>
                <th>Monitor Status</th>
                <th>Last Polld</th>
            </tr>
        </thead>
        <tbody>
            @foreach (dynamic data in node.DataCaches)
            {
                <tr>
                    <td>@data.Type</td>
                    <td>@data.Name</td>
                    <td>@data.CachedDataCount (@data.PollsTotal polls @data.PollsSuccessful successful)</td>
                    <td style="max-width: 300px;">@data.MonitorStatus.ToString() - @data.MonitorStatusReason</td>
                    <td>@(((DateTime)data.LastPoll).ToRelativeTime()) (@data.LastPollDuration.TotalMilliseconds ms)</td>
                </tr>
            }
        </tbody>
    </table>
</body>
</html>